-- Create schema
CREATE SCHEMA [source];
GO

-- Create investor table
CREATE TABLE [source].[investor] (
  [investor_id] INT NOT NULL,
  [name] VARCHAR(256) NULL,
  [geo] VARCHAR(128) NULL,
  [portfolios] VARCHAR(8000) NULL,
  [is_angel] BIT NULL
);
GO

ALTER TABLE [source].[investor]
ADD CONSTRAINT PK_investor PRIMARY KEY NONCLUSTERED ([investor_id]) NOT ENFORCED;
GO

-- Create investor_fund table
CREATE TABLE [source].[investor_fund] (
  [investor_id] INT NOT NULL,
  [fund_id] INT NOT NULL,
  [fund_name] VARCHAR(256) NULL,
  [geo] VARCHAR(128) NULL,
  [vintage] INT NULL,
  [invested] FLOAT NULL,
  [created_at] DATETIME2(6) NULL,
  [updated_at] DATETIME2(6) NULL
);
GO

ALTER TABLE [source].[investor_fund]
ADD CONSTRAINT PK_investor_fund_fundid PRIMARY KEY NONCLUSTERED ([fund_id]) NOT ENFORCED;
GO

ALTER TABLE [source].[investor_fund]
ADD CONSTRAINT FK_investor_fund_investorid FOREIGN KEY ([investor_id]) REFERENCES [source].[investor] ([investor_id]) NOT ENFORCED;
GO

-- Create fund_report table
CREATE TABLE [source].[fund_report] (
  [fund_id] INT NOT NULL,
  [report_path] VARCHAR(512) NOT NULL,
  [report_name] VARCHAR(256) NOT NULL,
  [report_type] VARCHAR(64) NULL,
  [year] INT NULL,
  [period] VARCHAR(128) NULL,
  [file_size] INT NULL,
  [page_count] INT NULL,
  [error_code] VARCHAR(64) NULL,
  [created_at] DATETIME2(6) NULL,
  [gross_moic] FLOAT NULL,
  [gross_dpi] FLOAT NULL,
  [net_moic] FLOAT NULL,
  [net_dpi] FLOAT NULL
);
GO

ALTER TABLE [source].[fund_report]
ADD CONSTRAINT PK_fund_report_path PRIMARY KEY NONCLUSTERED ([report_path]) NOT ENFORCED;
GO

ALTER TABLE [source].[fund_report]
ADD CONSTRAINT FK_fund_report_investor_fund FOREIGN KEY ([fund_id]) REFERENCES [source].[investor_fund] ([fund_id]) NOT ENFORCED;
GO

-- Create extracted_csv_record table
CREATE TABLE [source].[extracted_csv_record] (
  [report_path] VARCHAR(512) NOT NULL,
  [csv_path] VARCHAR(512) NOT NULL,
  [col_num] INT NULL,
  [row_num] INT NULL,
  [page] INT NULL,
  [is_extracted] BIT NULL,
  [error_code] VARCHAR(64) NULL,
  [created_at] DATETIME2(6) NULL
);
GO

ALTER TABLE [source].[extracted_csv_record]
ADD CONSTRAINT PK_extracted_csv_record PRIMARY KEY NONCLUSTERED ([csv_path]) NOT ENFORCED;
GO

ALTER TABLE [source].[extracted_csv_record]
ADD CONSTRAINT FK_extracted_csv_record_fund_report FOREIGN KEY ([report_path]) REFERENCES [source].[fund_report] ([report_path]) NOT ENFORCED;
GO

-- Create portfolio_company table
CREATE TABLE [source].[portfolio_company] (
  [report_path] VARCHAR(512) NOT NULL,
  [csv_path] VARCHAR(512) NOT NULL,
  [config_path] VARCHAR(512) NULL,
  [company_id] INT NULL,
  [company_name] VARCHAR(256) NULL,
  [total_cost] FLOAT NULL,
  [ownership] FLOAT NULL,
  [num_shares] INT NULL,
  [unrealized_value] FLOAT NULL,
  [realized_value] FLOAT NULL,
  [total] FLOAT NULL,
  [gross_moic] FLOAT NULL,
  [gross_dpi] FLOAT NULL,
  [is_validated] BIT NULL,
  [error_code] VARCHAR(64) NULL,
  [cols_P1] VARCHAR(256) NULL,
  [cols_P2] VARCHAR(256) NULL,
  [cols_dropped] VARCHAR(256) NULL
);
GO

ALTER TABLE [source].[portfolio_company]
ADD CONSTRAINT PK_portfolio_company PRIMARY KEY NONCLUSTERED ([csv_path]) NOT ENFORCED NOT ENFORCED;
GO

ALTER TABLE [source].[portfolio_company]
ADD CONSTRAINT FK_portfolio_company_fund_report FOREIGN KEY ([report_path]) REFERENCES [source].[fund_report] ([report_path]) NOT ENFORCED;
GO

ALTER TABLE [source].[portfolio_company]
ADD CONSTRAINT FK_portfolio_company_extracted_csv_record FOREIGN KEY ([csv_path]) REFERENCES [source].[extracted_csv_record] ([csv_path]) NOT ENFORCED;
GO

-- Create multi_match_metric table
CREATE TABLE [source].[multi_match_metric] (
  [csv_path] VARCHAR(512) NOT NULL,
  [page] INT NULL,
  [metric_name] VARCHAR(64) NULL,
  [source_cols] VARCHAR(256) NULL,
  [selected_col] VARCHAR(64) NULL,
  [created_at] DATETIME2(6) NULL,
  [updated_at] DATETIME2(6) NULL
);
GO

ALTER TABLE [source].[multi_match_metric]
ADD CONSTRAINT PK_multi_match_metric PRIMARY KEY NONCLUSTERED ([csv_path]) NOT ENFORCED;
GO

ALTER TABLE [source].[multi_match_metric]
ADD CONSTRAINT FK_multi_match_metric_portfolio_company FOREIGN KEY ([csv_path]) REFERENCES [source].[portfolio_company] ([csv_path]) NOT ENFORCED;
GO

-- Add extended properties
EXEC sp_addextendedproperty
@name = N'Column_Description',
@value = 'The multiple of the total value generated by the investment before deducting any fees, expenses, or carried interest.',
@level0type = N'Schema', @level0name = 'source',
@level1type = N'Table',  @level1name = 'fund_report',
@level2type = N'Column', @level2name = 'gross_moic';
GO

EXEC sp_addextendedproperty
@name = N'Column_Description',
@value = 'After deducting all fees, expenses, and carried interest.',
@level0type = N'Schema', @level0name = 'source',
@level1type = N'Table',  @level1name = 'fund_report',
@level2type = N'Column', @level2name = 'net_moic';
GO

EXEC sp_addextendedproperty
@name = N'Column_Description',
@value = 'Percentage is converted into floating point value',
@level0type = N'Schema', @level0name = 'source',
@level1type = N'Table',  @level1name = 'portfolio_company',
@level2type = N'Column', @level2name = 'ownership';
GO

EXEC sp_addextendedproperty
@name = N'Column_Description',
@value = 'The list of columns matched via P1 rules',
@level0type = N'Schema', @level0name = 'source',
@level1type = N'Table',  @level1name = 'portfolio_company',
@level2type = N'Column', @level2name = 'cols_P1';
GO

EXEC sp_addextendedproperty
@name = N'Column_Description',
@value = 'The list of columns matched via P2 rules, including selected multi-match results',
@level0type = N'Schema', @level0name = 'source',
@level1type = N'Table',  @level1name = 'portfolio_company',
@level2type = N'Column', @level2name = 'cols_P2';
GO
